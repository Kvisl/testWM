openapi: 3.0.3
info:
  title: Django DRF Cat
  version: 1.0.0
  description: description
paths:
  /api/v1/breeds/:
    get:
      operationId: v1_breeds_list
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Breed'
          description: ''
    post:
      operationId: v1_breeds_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Breed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Breed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Breed'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
          description: ''
  /api/v1/breeds/{id}/:
    get:
      operationId: v1_breeds_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this breed.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
          description: ''
    put:
      operationId: v1_breeds_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this breed.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Breed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Breed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Breed'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
          description: ''
    patch:
      operationId: v1_breeds_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this breed.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBreed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBreed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBreed'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Breed'
          description: ''
    delete:
      operationId: v1_breeds_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this breed.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/cats/:
    get:
      operationId: v1_cats_list
      description: Получить список котов с возможностью фильтрации по породе
      parameters:
      - in: query
        name: breed
        schema:
          type: integer
        description: ID породы кота для фильтрации
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cat'
          description: ''
    post:
      operationId: v1_cats_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
  /api/v1/cats/{id}/:
    get:
      operationId: v1_cats_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cat.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CatDetail'
          description: ''
    put:
      operationId: v1_cats_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cat.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cat'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    patch:
      operationId: v1_cats_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cat.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCat'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCat'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCat'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cat'
          description: ''
    delete:
      operationId: v1_cats_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this cat.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/token/:
    post:
      operationId: v1_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/v1/token/refresh/:
    post:
      operationId: v1_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Breed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
      - name
    Cat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        colour:
          type: string
          maxLength: 20
        age:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
        author:
          type: integer
          nullable: true
        breed:
          type: integer
          nullable: true
      required:
      - age
      - colour
      - id
    CatDetail:
      type: object
      properties:
        colour:
          type: string
          maxLength: 20
        age:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
        breed:
          allOf:
          - $ref: '#/components/schemas/Breed'
          readOnly: true
      required:
      - age
      - breed
      - colour
    PatchedBreed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
    PatchedCat:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        colour:
          type: string
          maxLength: 20
        age:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        description:
          type: string
        author:
          type: integer
          nullable: true
        breed:
          type: integer
          nullable: true
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
